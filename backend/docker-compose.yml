services:
  db:
    image: postgres:latest
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: thesis_db
      POSTGRES_USER: thesis_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} 
    ports:
      - "5433:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: . 
    container_name: django_backend
    ports:
      - "8000:8000" 
    environment:
      DJANGO_SETTINGS_MODULE: thesis_system.settings 
      POSTGRES_DB: ${POSTGRES_DB:-thesis_db} 
      POSTGRES_USER: ${POSTGRES_USER:-thesis_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_HOST: db 
      POSTGRES_PORT: 5432 
    depends_on:
      db:
        condition: service_healthy 
    develop:
      watch:
        - action: sync+restart 
          path: . 
          target: /app 
          ignore: 
            - __pycache__/
            - .git/
            - venv/
            - .idea/
            - .vscode/
            - '*.pyc'
            - Dockerfile
            - docker-compose.yml
            - requirements.txt
            - .dockerignore
            - db.sqlite3 
            - '*.md'
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

volumes:
  postgres_data: 